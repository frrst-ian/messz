generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  fullName String?
  email    String    @unique
  password String?
  messages Message[]
  profile  Profile?

  conversationParticipants ConversationParticipant[]

  @@map("user")
}

model ConversationParticipant {
  id             String @id @default(uuid())
  userId         String
  conversationId String

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@unique([userId, conversationId])
  @@map("conversation_participant")
}

model Conversation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  participants ConversationParticipant[]

  messages Message[]

  @@map("conversation")
}

model Message {
  id             String   @id @default(uuid())
  conversationId String
  senderId       String
  content        String
  sentAt         DateTime @default(now())
  seen           Boolean  @default(false)

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender       User         @relation(fields: [senderId], references: [id], onDelete: Cascade)

  @@map("message")
}

model Profile {
  id        String   @id @default(uuid())
  pfpUrl    String?
  bio       String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("profile")
}
